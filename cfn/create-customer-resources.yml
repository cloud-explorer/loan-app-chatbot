AWSTemplateFormatVersion: "2010-09-09"
Description: "Supporting resources for Loan servicing Agent powered by Agents and Knowledge base for Amazon Bedrock"
Parameters:
  ArtifactBucket:
    Description: S3 Bucket Containing Code Assets for Data Loader and Agent Action Group Lambda Functions
    Type: String
    Default: your-code-assets-bucket-name
  DataLoaderKey:
    Description: S3 Key for Data Loader
    Type: String
    Default: /agent/lambda/data-loader/loader_deployment_package.zip
  CreateLoanKey:
    Description: S3 Key for create loan application function code
    Type: String
    Default: /agent/lambda/action-groups/create_loan.zip
  LoanCalculatorKey:
    Description: S3 Key for create loan calculator function code
    Type: String
    Default: /agent/lambda/action-groups/loan_calculator.zip
  MLSLookupKey:
    Description: S3 Key for create mls_lookup function code
    Type: String
    Default: /agent/lambda/action-groups/mls_lookup.zip
  GatherEvidenceKey:
    Description: S3 Key for gather evidence function code
    Type: String
    Default: /agent/lambda/action-groups/gather_evidence.zip
  SendReminderKey:
    Description: S3 Key for send reminder function code
    Type: String
    Default: /agent/lambda/action-groups/send_reminder.zip
  BedrockAgentsLayerArn:
    Description: Agents for Bedrock Lambda Layer
    Type: String
    Default: bedrock-layer-arn
  SNSEmail:
    Description: SNS Email.
    Type: String
    Default: your-sns-email
  EvidenceUploadUrl:
    Description: Customer Evidence Upload Website URL
    Type: String
    Default: your-evidence-upload-url

Resources:
  PropertyListingTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-Property-Listing
      AttributeDefinitions:
        - AttributeName: mls_id
          AttributeType: S
      KeySchema:
        - AttributeName: mls_id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '3'
        WriteCapacityUnits: '3'
      SSESpecification:
        SSEEnabled: True

  LoanTable:
    Type: AWS::DynamoDB::Table
    Properties:
      TableName: !Sub ${AWS::StackName}-Loan
      AttributeDefinitions:
        - AttributeName: loan_id
          AttributeType: S
      KeySchema:
        - AttributeName: loan_id
          KeyType: HASH
      ProvisionedThroughput:
        ReadCapacityUnits: '3'
        WriteCapacityUnits: '3'
      SSESpecification:
        SSEEnabled: True

  AgentActionGroupLambdaRole:
    Type: 'AWS::IAM::Role'
    Properties:
      RoleName: !Sub ${AWS::StackName}-AgentActionGroupLambdaRole
      AssumeRolePolicyDocument:
        Statement:
          - Action: 'sts:AssumeRole'
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: 2012-10-17
      ManagedPolicyArns:
        - !Join 
          - ''
          - - 'arn:'
            - !Ref 'AWS::Partition'
            - ':iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'

  AgentActionGroupLambdaRoleDefaultPolicy:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: !Sub ${AWS::StackName}-AgentActionGroupLambdaRoleDefaultPolicy
      PolicyDocument:
        Statement:
          - Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:DeleteItem
              - dynamodb:DescribeTable
              - dynamodb:GetItem
              - dynamodb:GetRecords
              - dynamodb:GetShardIterator
              - dynamodb:PutItem
              - dynamodb:Query
              - dynamodb:Scan
              - dynamodb:UpdateItem
              - lambda:Get*
              - lambda:InvokeFunction
              - bedrock:InvokeModel
              - sns:Publish
              - s3:GetObject
              - s3:PutObject
            Effect: Allow
            Resource: '*'        
        Version: 2012-10-17
      Roles:
        - !Ref AgentActionGroupLambdaRole

  BedrockCreateLoanFunctionPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref CreateLoanFunction
      Principal: 'bedrock.amazonaws.com'

  BedrockLoanCalculatorFunctionPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref LoanCalculatorFunction
      Principal: 'bedrock.amazonaws.com'
  
  BedrockMLSLoopupFunctionPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref MLSLookupFunction
      Principal: 'bedrock.amazonaws.com'

  BedrockSendReminderFunctionPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref SendReminderFunction
      Principal: 'bedrock.amazonaws.com'

  BedrockGatherEvidenceFunctionPermission:
    Type: 'AWS::Lambda::Permission'
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Ref GatherEvidenceFunction
      Principal: 'bedrock.amazonaws.com'

  DataLoaderFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Lambda function to initially load the claims catalog.
      FunctionName: !Sub ${AWS::StackName}-BedrockDataLoader
      Code: 
        S3Bucket: !Ref ArtifactBucket
        S3Key: !Ref DataLoaderKey
      Runtime: nodejs14.x
      MemorySize: 256
      Timeout: 20
      Handler: index.lambda_handler
      Role: !GetAtt AgentActionGroupLambdaRole.Arn
      Environment:
        Variables:
          PROPERTY_TABLE_NAME: !Ref PropertyListingTable
          LOAN_TABLE_NAME: !Ref LoanTable

  LoadData:
    Type: Custom::LoadDynamoDB
    Properties:
      ServiceToken: !GetAtt DataLoaderFunction.Arn

  CreateLoanFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Bedrock  agent create loan function
      FunctionName: !Sub ${AWS::StackName}-CreateLoanFunction
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: !Ref CreateLoanKey
      Runtime: python3.11
      MemorySize: 512
      Timeout: 30
      Handler: create_loan.lambda_handler
      Layers:
        - !Ref BedrockAgentsLayerArn
      Role: !GetAtt AgentActionGroupLambdaRole.Arn
      Architectures:
        - arm64
      Environment:
        Variables:
          CUSTOMER_WEBSITE_URL: !Ref EvidenceUploadUrl
          PROPERTY_TABLE_NAME: !Ref PropertyListingTable
          LOAN_TABLE_NAME: !Ref LoanTable
          SNS_TOPIC_ARN: !Ref SNSTopic
  
  MLSLookupFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Bedrock  agent MLS Lookup function
      FunctionName: !Sub ${AWS::StackName}-MLSLookupFunction
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: !Ref MLSLookupKey
      Runtime: python3.11
      MemorySize: 512
      Timeout: 30
      Handler: mls_lookup.lambda_handler
      Layers:
        - !Ref BedrockAgentsLayerArn
      Role: !GetAtt AgentActionGroupLambdaRole.Arn
      Architectures:
        - arm64
      Environment:
        Variables:
          CUSTOMER_WEBSITE_URL: !Ref EvidenceUploadUrl
          PROPERTY_TABLE_NAME: !Ref PropertyListingTable
          LOAN_TABLE_NAME: !Ref LoanTable
          SNS_TOPIC_ARN: !Ref SNSTopic
  
  LoanCalculatorFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Bedrock Insurance agent Loan Affordability Calculator"
      FunctionName: !Sub ${AWS::StackName}-LoanCalculatorFunction
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: !Ref LoanCalculatorKey
      Runtime: python3.11
      MemorySize: 512
      Timeout: 30
      Handler: loan_calculator.lambda_handler
      Layers:
        - !Ref BedrockAgentsLayerArn
      Role: !GetAtt AgentActionGroupLambdaRole.Arn
      Architectures:
        - arm64
      Environment:
        Variables:
          CUSTOMER_WEBSITE_URL: !Ref EvidenceUploadUrl
          PROPERTY_TABLE_NAME: !Ref PropertyListingTable
          LOAN_TABLE_NAME: !Ref LoanTable
          SNS_TOPIC_ARN: !Ref SNSTopic

  SendReminderFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Bedrock Insurance agent send reminder function
      FunctionName: !Sub ${AWS::StackName}-SendReminderFunction
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: !Ref SendReminderKey
      Runtime: python3.11
      MemorySize: 512
      Timeout: 30
      Handler: send_reminder.lambda_handler
      Layers:
        - !Ref BedrockAgentsLayerArn
      Role: !GetAtt AgentActionGroupLambdaRole.Arn
      Architectures:
        - arm64
      Environment:
        Variables:
          PROPERTY_TABLE_NAME: !Ref PropertyListingTable
          LOAN_TABLE_NAME: !Ref LoanTable
          SNS_TOPIC_ARN: !Ref SNSTopic

  GatherEvidenceFunction:
    Type: AWS::Lambda::Function
    Properties:
      Description: Bedrock Insurance agent gather evidence function.
      FunctionName: !Sub ${AWS::StackName}-GatherEvidenceFunction
      Code:
        S3Bucket: !Ref ArtifactBucket
        S3Key: !Ref GatherEvidenceKey
      Runtime: python3.11
      MemorySize: 512
      Timeout: 30
      Handler: gather_evidence.lambda_handler
      Layers:
        - !Ref BedrockAgentsLayerArn
      Role: !GetAtt AgentActionGroupLambdaRole.Arn
      Architectures:
        - arm64
      Environment:
        Variables:
          CUSTOMER_WEBSITE_URL: !Ref EvidenceUploadUrl
          SNS_TOPIC_ARN: !Ref SNSTopic

  SNSTopic:
    Type: AWS::SNS::Topic

  SNSSubscription:
    Type: AWS::SNS::Subscription
    Properties: 
      Endpoint: !Ref SNSEmail
      Protocol: email
      TopicArn: !Ref SNSTopic
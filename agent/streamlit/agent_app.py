#import streamlit
import streamlit as st
from dataclasses import dataclass
# import get_response_from_agent from utils.py
from utils import get_response_from_agent, session_generator

@dataclass
class Message:
    actor: str
    payload: str

USER = "user"
ASSISTANT = "ai"
MESSAGES = "messages"

# Streamlit App Layout
st.title('Bedrock Mortgage Agent')
st.subheader('Powered by Amazon Bedrock')
logo = "bedrock_logo.png"
st.sidebar.image(logo, width=300, output_format='PNG')
# st.sidebar.markdown(style, unsafe_allow_html=True)
st.sidebar.subheader('**About this Demo**')
st.sidebar.markdown('<p class="text-with-bg">The Bedrock Mortgage Solution uses Agents and Knowledge base for Amazon Bedrock. This agent can assist customers at Fannie Mae by providing information and support related to mortgage products, application processes, status updates, and details about loan terms and eligibility. They aim to deliver excellent service, guiding customers through homebuying and mortgage financing while being equipped to address queries on refinance, modification options, and mortgage assistance programs. </p>', unsafe_allow_html=True)

with st.expander("ℹ️ Disclaimer"):
    st.caption(
        "This demo uses an Amazon Bedrock foundation model and is not intended to collect any personally identifiable information (PII) from users. Please do not provide any PII when interacting with this demo. The content generated by this demo is for informational purposes only."
    )

def initialize_session_state():
    if MESSAGES not in st.session_state:
        st.session_state[MESSAGES] = [Message(actor=ASSISTANT, payload="Hi!How can I help you?")]
    if "session_id" not in st.session_state:
            st.session_state["session_id"] = session_generator()

initialize_session_state()

msg: Message
for msg in st.session_state[MESSAGES]:
    st.chat_message(msg.actor).write(msg.payload)

prompt: str = st.chat_input("Enter a prompt here")

if prompt:
    st.session_state[MESSAGES].append(Message(actor=USER, payload=prompt))
    st.chat_message(USER).markdown(prompt)
    sessionId = st.session_state["session_id"]
    with st.spinner("Please wait.."):
        response: str = get_response_from_agent(prompt, sessionId=sessionId)
        st.session_state[MESSAGES].append(Message(actor=ASSISTANT, payload=response))
        st.chat_message(ASSISTANT).markdown(response)